{
  "name": "ai-todo-mcp",
  "version": "1.0.0",
  "description": "AI-Driven PWA Task Manager with Modular Command Protocol",
  "private": true,
  "workspaces": [
    "packages/*",
    "apps/*"
  ],
  "scripts": {
    "dev": "concurrently \"npm run dev:frontend\" \"npm run dev:backend\"",
    "dev:frontend": "cd apps/frontend && npm run dev",
    "dev:backend": "cd apps/backend && npm run dev",
    "build": "node scripts/build.js",
    "build:parallel": "node scripts/build.js --parallel",
    "build:sequential": "node scripts/build.js --sequential",
    "build:clean": "node scripts/build.js --clean",
    "build:packages": "npm run build:mcp-core && npm run build:shared-types && npm run build:storage",
    "build:mcp-core": "cd packages/mcp-core && npm run build",
    "build:shared-types": "cd packages/shared-types && npm run build",
    "build:storage": "cd packages/storage && npm run build",
    "build:frontend": "cd apps/frontend && npm run build",
    "build:backend": "cd apps/backend && npm run build",
    "build:production": "NODE_ENV=production npm run build",
    "build:analyze": "npm run build && npm run analyze:bundle",
    "test": "npm run test:packages && npm run test:frontend && npm run test:backend",
    "test:packages": "npm run test:mcp-core && npm run test:shared-types && npm run test:storage",
    "test:mcp-core": "cd packages/mcp-core && npm run test",
    "test:shared-types": "cd packages/shared-types && npm run test",
    "test:storage": "cd packages/storage && npm run test",
    "test:frontend": "cd apps/frontend && npm run test",
    "test:backend": "cd apps/backend && npm run test",
    "test:watch": "concurrently \"npm run test:frontend -- --watch\" \"npm run test:backend -- --watch\"",
    "test:coverage": "npm run test:frontend -- --coverage && npm run test:backend -- --coverage",
    "test:coverage:all": "npm run test:packages -- --coverage && npm run test:frontend -- --coverage && npm run test:backend -- --coverage",
    "test:coverage:check": "node scripts/coverage-check.js",
    "test:coverage:merge": "node scripts/merge-coverage.js",
    "test:coverage:report": "npm run test:coverage:all && npm run test:coverage:merge && npm run test:coverage:check",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:visual": "npm run test:frontend -- --run src/__tests__/visual",
    "test:visual:update": "npm run test:frontend -- --run src/__tests__/visual --update-snapshots",
    "test:performance": "npm run test:frontend -- --run src/__tests__/performance",
    "test:accessibility": "npm run test:frontend -- --run src/__tests__/accessibility",
    "test:integration": "npm run test:backend -- --testPathPattern=integration",
    "test:all": "node scripts/test-runner.js",
    "test:quality": "node scripts/test-runner.js --quality",
    "lint": "eslint . --ext .js,.jsx,.ts,.tsx",
    "lint:fix": "eslint . --ext .js,.jsx,.ts,.tsx --fix",
    "type-check": "npm run type-check:packages && npm run type-check:frontend && npm run type-check:backend",
    "type-check:packages": "cd packages/mcp-core && npm run type-check && cd ../shared-types && npm run type-check && cd ../storage && npm run type-check",
    "type-check:frontend": "cd apps/frontend && npm run type-check",
    "type-check:backend": "cd apps/backend && npm run type-check",
    "docs:generate": "npm run docs:api && npm run docs:jsdoc && npm run docs:diagrams && npm run docs:dependencies",
    "docs:api": "typedoc --out docs/api packages/*/src apps/*/src",
    "docs:jsdoc": "jsdoc2md packages/*/src/**/*.js apps/*/src/**/*.js > docs/api/jsdoc.md",
    "docs:diagrams": "npm run docs:mermaid",
    "docs:mermaid": "mmdc -i docs/diagrams/architecture.mmd -o docs/diagrams/architecture.svg",
    "docs:dependencies": "madge --image docs/diagrams/dependencies.svg --extensions ts,tsx,js,jsx .",
    "docs:swagger": "node scripts/generate-swagger.js",
    "docs:clean": "rimraf docs/api docs/diagrams/*.svg docs/diagrams/*.png",
    "docs:serve": "npx http-server docs -p 8080 -o",
    "docs:build": "npm run docs:clean && npm run docs:generate && npm run docs:swagger",
    "lighthouse": "lhci autorun",
    "lighthouse:ci": "lhci autorun --upload.target=temporary-public-storage",
    "analyze:bundle": "npm run build && npx webpack-bundle-analyzer apps/frontend/dist/assets/*.js",
    "analyze:dependencies": "npx madge --image dependency-graph.svg --extensions ts,tsx,js,jsx .",
    "clean": "rimraf node_modules apps/*/node_modules packages/*/node_modules apps/*/dist packages/*/dist coverage test-results",
    "clean:coverage": "rimraf apps/*/coverage packages/*/coverage coverage",
    "clean:tests": "rimraf test-results apps/*/test-results packages/*/test-results",
    "coverage:badges": "node scripts/coverage-check.js --badges-only",
    "coverage:enforce": "node scripts/coverage-check.js --strict",
    "quality:gates": "node scripts/quality-gates.js",
    "quality:gates:strict": "node scripts/quality-gates.js --strict",
    "quality:check": "npm run quality:gates && npm run test:quality",
    "badges:generate": "node scripts/generate-badges.js",
    "deploy:development": "node scripts/deploy.js development",
    "deploy:staging": "node scripts/deploy.js staging --confirmed",
    "deploy:production": "node scripts/deploy.js production --confirmed",
    "test:smoke": "node scripts/smoke-tests.js",
    "test:smoke:staging": "node scripts/smoke-tests.js --url=$STAGING_URL --api-url=$STAGING_BACKEND_URL",
    "test:smoke:production": "node scripts/smoke-tests.js --url=$PRODUCTION_URL --api-url=$PRODUCTION_BACKEND_URL",
    "lint:package-json": "npmPkgJsonLint .",
    "test:related": "npm run test:frontend -- --related --watchAll=false",
    "security:scan": "echo 'Security scan placeholder'",
    "deploy": "node scripts/deploy.js",
    "analyze:deps": "npx depcheck",
    "analyze:duplicates": "npx npm-check-duplicates",
    "test:lighthouse": "lhci autorun --config=.lighthouserc.json",
    "test:load": "k6 run performance/load-tests/api-load-test.js",
    "test:perf:frontend": "npx playwright test performance/frontend-performance.spec.ts",
    "ci": "npm run lint && npm run type-check && npm run test:coverage && npm run build",
    "postinstall": "husky install",
    "version:patch": "node scripts/version-manager.js patch",
    "version:minor": "node scripts/version-manager.js minor",
    "version:major": "node scripts/version-manager.js major",
    "version:prerelease": "node scripts/version-manager.js prerelease",
    "version:dry-run": "node scripts/version-manager.js patch --dry-run",
    "changelog": "node scripts/version-manager.js patch --skip-git --skip-checks",
    "release:patch": "npm run version:patch",
    "release:minor": "npm run version:minor",
    "release:major": "npm run version:major",
    "release:prerelease": "npm run version:prerelease",
    "readme:update": "node scripts/update-readme.js",
    "readme:generate": "npm run readme:update && npm run badges:generate"
  },
  "devDependencies": {
    "@types/node": "^20.10.0",
    "@typescript-eslint/eslint-plugin": "^6.13.0",
    "@typescript-eslint/parser": "^6.13.0",
    "concurrently": "^8.2.2",
    "documentation": "^14.0.3",
    "eslint": "^8.54.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.1",
    "eslint-plugin-react": "^7.33.2",
    "eslint-plugin-react-hooks": "^4.6.0",
    "husky": "^8.0.3",
    "jsdoc": "^4.0.2",
    "jsdoc-to-markdown": "^8.0.0",
    "lint-staged": "^15.1.0",
    "madge": "^6.1.0",
    "@mermaid-js/mermaid-cli": "^10.9.0",
    "prettier": "^3.1.0",
    "rimraf": "^5.0.5",
    "standard-version": "^9.5.0",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.0",
    "typedoc": "^0.25.4",
    "typedoc-plugin-mermaid": "^1.10.0",
    "typescript": "^5.3.2"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix --max-warnings 0",
      "prettier --write",
      "git add"
    ],
    "*.{json,md,yml,yaml,css,scss,html}": [
      "prettier --write",
      "git add"
    ],
    "*.{ts,tsx}": [
      "bash -c 'tsc --noEmit --skipLibCheck'"
    ],
    "package.json": [
      "npm run lint:package-json",
      "git add"
    ],
    "*.test.{js,jsx,ts,tsx}": [
      "npm run test:related --",
      "git add"
    ],
    "*.{js,jsx,ts,tsx,json,md}": [
      "npm run security:scan --"
    ]
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/your-username/ai-todo-mcp.git"
  },
  "keywords": [
    "ai",
    "todo",
    "task-management",
    "pwa",
    "mcp",
    "react",
    "nodejs",
    "typescript"
  ],
  "author": "Your Name",
  "license": "MIT",
  "dependencies": {
    "@types/better-sqlite3": "^7.6.13",
    "better-sqlite3": "^12.2.0",
    "postgres": "^3.4.7"
  }
}
